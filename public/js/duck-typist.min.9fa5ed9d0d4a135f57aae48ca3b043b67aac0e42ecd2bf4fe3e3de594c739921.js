const QUACK=new Audio("quack.wav"),MIN_PRECISION=98,MIN_CPM_SPEED=100,MIN_WIN_STREAK=5,STARTING_LEVEL=4,MIN_WORD_COUNT=42,ALL_30_KEYS=["KeyF","KeyJ","KeyD","KeyK","KeyS","KeyL","KeyA","Semicolon","KeyE","KeyI","KeyW","KeyO","KeyV","KeyM","KeyG","KeyH","KeyQ","KeyP","KeyR","KeyU","KeyT","KeyY","KeyB","KeyN","KeyC","Comma","KeyX","Period","KeyZ","Slash"];window.addEventListener("DOMContentLoaded",()=>{"use strict";const s=document.querySelector("x-keyboard"),h=document.querySelector("#geometry"),t=document.querySelector("#layout"),u=document.querySelector("#dict"),j=document.querySelector(".key_list"),C=document.querySelector(".status"),d=document.querySelector(".quacks"),a=document.querySelector("#lesson"),g=document;let r=void 0,c={words:void 0,trigrams:void 0,bigrams:void 0},i=[],e=void 0,l=void 0,o=void 0,n=void 0,f=!1;const O=()=>{const e=u.value.split(",")[0];return fetch(`../corpus/${e}.json`).then(e=>e.json()).then(e=>{c.trigrams=Object.keys(e.trigrams),c.bigrams=Object.keys(e.digrams)})},y=()=>{const e=u.value.split(",")[1];return fetch(`./${e}.json`).then(e=>e.json()).then(e=>{c.words=e.words})},E=()=>fetch(`../layouts/${t.value}.json`).then(e=>e.json()).then(e=>{s.setKeyboardLayout(e.keymap,e.deadkeys,h.value),s.theme="hints",r=e}),m=()=>{localStorage.setItem(`${t.value}.level`,o);const e=ALL_30_KEYS.slice(0,o),n=e.map(e=>r.keymap[e][0]),h=e.flatMap(e=>r.keymap[e]),s=r.deadkeys["**"],a=e.some(e=>r.keymap[e].indexOf("**")>=0),l=a?n.filter(e=>e in s).map(e=>s[e]):[],d=n.concat(l),u=e=>Array.from(e).every(e=>d.indexOf(e)>=0);i=[];for(const e of[c.words,c.trigrams,c.bigrams,n])if(i=i.concat(e.filter(u)),i.length>MIN_WORD_COUNT)break;p(),b(),k()},k=()=>{const e=e=>e>=0&&e<o,t=(t,n)=>{const s=r.keymap[t][0],o=s==="**"?"â˜…":s.slice(-1),i=e(n)?"":"inactive";return`<kbd data-level="${n+1}" class="${i}">${o}</kbd>`};j.innerHTML=ALL_30_KEYS.map(t).join(""),s.keys.forEach(t=>{t.style.opacity=e(ALL_30_KEYS.indexOf(t.id))?1:.5})},b=()=>{if(l=void 0,a.innerHTML="",i.length===0)return;let t="";for(;t.length<120;)t+=i[i.length*Math.random()|0]+" ";a.innerHTML=Array.from(t.slice(0,-1)).map(e=>e==" "?'<span class="space"></span>':`<span>${e}</span>`).join(""),e=a.firstElementChild,e.id="current",f=!1},_=t=>{if(!e)return;const n=e.innerText===t||t===" "&&e.innerText==="";if(!n&&!l)return;n?(e.classList.add(f?"fixed":"done"),e.id="",e=e.nextSibling,f=!1):(e.classList.add("error"),f=!0),l||(l=performance.now(),C.innerText="â€¦"),e?e.id="current":(A(performance.now()),l=void 0)},A=e=>{const s=(e-l)/6e4,i=a.querySelectorAll(".error").length,r=a.querySelectorAll(".space").length+1,o=a.children.length,t=Math.round(o/s),c=Math.round(r/s),n=100-Math.round(1e3*i/o)/10;C.innerHTML=`${c}â€¯wpm, ${t}â€¯cpm <progress value="${t}" max="${MIN_CPM_SPEED}">${t}</progress>, ${n}â€¯% <progress value="${n}" max="${MIN_PRECISION}">${n}%</progress>`,t>=MIN_CPM_SPEED&&n>=MIN_PRECISION?w():S()},w=()=>{QUACK.play(),n++,p(),n>=MIN_WIN_STREAK?(o=2*(Math.floor(o/2)+1),n=1,d.parentNode.classList.add("active"),setTimeout(m,500)):setTimeout(b,500)},S=()=>{n=Math.max(1,n-1),p(),setTimeout(b,500)},p=()=>{localStorage.setItem(`${t.value}.quacks`,n),d.parentNode.classList.remove("active"),d.innerText=Array(n).fill("ðŸ¦†").join("")};d.addEventListener("transitionend",p),d.addEventListener("dblclick",w);const x=()=>{const e=window.location.hash.slice(1),s=localStorage.getItem("dict"),i=localStorage.getItem("geometry"),a=localStorage.getItem(`${t.value}.level`),r=localStorage.getItem(`${t.value}.quacks`);e&&(t.value=e),s&&(u.value=s),i&&(h.value=i),o=a?Number(a):STARTING_LEVEL,n=r?Number(r):1,window.location.hash=`#${t.value}`,Promise.all([O(),y(),E()]).then(m)};window.addEventListener("hashchange",x),t.addEventListener("change",()=>{window.location.hash=`#${t.value}`}),u.addEventListener("change",()=>{localStorage.setItem("dict",u.value),Promise.all([O(),y()]).then(m)}),h.addEventListener("change",e=>{localStorage.setItem("geometry",h.value),s.geometry=h.value}),j.addEventListener("click",e=>{e.target.nodeName.toLowerCase()=="kbd"&&(o=e.target.dataset.level,m())}),x();const v={};g.onkeydown=e=>{v[e.code]=!0;const t=s.keyDown(e);if(t)_(t);else return!0;return!1},g.addEventListener("keyup",e=>{v[e.code]?(s.keyUp(e),delete v[e.code]):(_(e.value),setTimeout(()=>s.keyUp(e),100))}),g.addEventListener("input",e=>{(e.inputType==="insertCompositionText"||e.inputType==="insertText")&&(e.target.value=e.target.value.slice(0,-e.data.length))})})